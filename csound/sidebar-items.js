initSidebarItems({"enum":[["AudioChannel","An audio channel identifier"],["ChannelData","Enum variant which represent channel's types in callbacks."],["ControlChannel","A control channel identifier"],["FileTypes","Describes the differents file types which are supported are by csound"],["Language","The languages supported by csound"],["MessageType","Define the type of csound messages"],["Status","Csound error codes"],["StrChannel","A string channel identifier"]],"struct":[["BufferPtr","Csound buffer pointer representation. This struct is build up to manipulate directly csound's buffers."],["ChannelHints","Holds the channel HINTS information."],["ChannelInfo","Holds all relevant information about a csound bus channel."],["ChannelPtr","Struct represents a csound channel object."],["CircularBuffer","Csound's Circular Buffer object. This struct wraps a *mut T pointer to a circular buffer allocated by csound. This Circular buffer won't outlive the csound instance that allocated the buffer."],["ControlChannelPtr","Rust representation for a raw csound channel pointer"],["ControlChannelType","Defines the types of csound bus cahnnels"],["CsAudioDevice","Struct with specific audio device information."],["CsMidiDevice","Struct with specific MIDI device information."],["Csound","Opaque struct representing an csound object"],["FileInfo","Struct containing the relevant info of files are opened by csound."],["OpcodeListEntry","Struct with information about a csound opcode."],["PvsDataExt","Holds pvs data info of a pvs channel."],["RtAudioParams","Real time audio params for a specific audio Device."],["Table","Csound table representation. This struct is build up to manipulate directly a csound's table."]],"trait":[["GetChannel",""],["InputChannelPtr","Tait with the write function which is implemented by control, audio and string channels"],["OutputChannelPtr","Trait with the read function which is implemented by like control, audio and string channels"]],"type":[["RTCLOCK",""]]});